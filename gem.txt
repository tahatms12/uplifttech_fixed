Use a single Netlify _headers file and allow every external analytics pixel explicitly.

perl
Copy
Edit
/*
  Content-Security-Policy:
    default-src 'self';
    script-src
      'self'
      'unsafe-inline'
      'unsafe-eval'
      https://www.googletagmanager.com
      https://connect.facebook.net
      https://analytics.tiktok.com
      https://snap.licdn.com
      https://static.ads-twitter.com
      https://s.pinimg.com
      https://sc-static.net
      https://www.redditstatic.com
      https://a.quora.com
      https://bat.bing.com
      https://googleads.g.doubleclick.net
      https://app.cal.com;
    connect-src
      'self'
      https://www.google-analytics.com
      https://connect.facebook.net
      https://analytics.tiktok.com
      https://snap.licdn.com
      https://static.ads-twitter.com
      https://sc-static.net
      https://www.redditstatic.com
      https://a.quora.com
      https://bat.bing.com
      https://googleads.g.doubleclick.net
      https://app.cal.com;
    frame-src
      'self'
      https://forms.zohopublic.com
      https://connect.facebook.net
      https://www.facebook.com
      https://www.googletagmanager.com
      https://td.doubleclick.net
      https://app.cal.com;
    img-src
      'self'
      data:
      blob:
      https://*.facebook.com
      https://*.fbcdn.net
      https://www.googletagmanager.com
      https://googleads.g.doubleclick.net
      https://analytics.tiktok.com
      https://snap.licdn.com
      https://s.pinimg.com
      https://static.ads-twitter.com
      https://bat.bing.com;
    style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
    font-src  'self' https://fonts.gstatic.com;
    worker-src 'self';
    object-src 'none';
    base-uri 'self';
    form-action 'self';
Place your service-worker script at /public/service-worker.js, ensure the server returns JavaScript not HTML, and register it with the exact same path. Strip the navigation-preload warning:

js
Copy
Edit
self.addEventListener('activate', e => {
  e.waitUntil(self.registration.navigationPreload.enable());
});

self.addEventListener('fetch', e => {
  e.respondWith((async () => {
    const preload = await e.preloadResponse;
    return preload || fetch(e.request);
  })());
});
CSP directive syntax and Netlify header delivery confirmed