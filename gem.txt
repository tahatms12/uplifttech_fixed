Root causes
• service-worker.js and sw\.js requests receive index.html because Netlify redirect rules catch everything. Browser tries to run HTML as JS and throws “Unexpected token ‘<’”.
• navigationPreload is turned on but fetch handler never calls event.respondWith(preloadResponse). Browser cancels the preload and logs the warning.([MDN Web Docs][1])
• Current Content-Security-Policy limits script-src and connect-src to 'self'. External pixels, GTM, DoubleClick, Zoho frames, etc. are blocked.([docs.netlify.com][2], [Google for Developers][3])
• Poppins woff2 files referenced in CSS are missing or corrupted; Netlify again serves HTML, so OTS rejects them.
• Frame-src and connect-src omissions block doubleclick, GA collect, td.doubleclick.net, etc.

Directives

1. Restore static assets
    Place valid Poppins woff2 files under /public/fonts.
    Update CSS import path or remove the preload lines.
    Commit and redeploy.

2. Exempt service-worker files from SPA rewrites
   *create a file named **\_redirects** (if none exists) at repository root*

```
/sw.js                /sw.js                 200
/service-worker.js    /service-worker.js     200
```

Netlify stops rewriting those requests to index.html.

3. Replace the broken CSP header
   *create **/\_headers** (or edit the existing one) exactly as shown*

```
/*
  Content-Security-Policy: default-src 'self'; \
  script-src 'self' 'unsafe-inline' 'unsafe-eval' \
    https://www.googletagmanager.com \
    https://www.google-analytics.com \
    https://connect.facebook.net \
    https://static.ads-twitter.com \
    https://snap.licdn.com \
    https://q.quora.com \
    https://bat.bing.com \
    https://td.doubleclick.net \
    https://sc-static.net \
    https://cdn.pinterest.com; \
  connect-src 'self' \
    https://www.google-analytics.com \
    https://region1.google-analytics.com \
    https://stats.g.doubleclick.net \
    https://www.google.com \
    https://bat.bing.com \
    https://tr.snapchat.com \
    https://analytics.twitter.com \
    https://q.quora.com; \
  img-src 'self' data: blob: \
    https://www.google-analytics.com \
    https://www.googletagmanager.com \
    https://connect.facebook.net \
    https://static.ads-twitter.com \
    https://snap.licdn.com \
    https://q.quora.com \
    https://tr.snapchat.com \
    https://cdn.pinterest.com \
    https://stats.g.doubleclick.net; \
  frame-src 'self' https://forms.zohopublic.com \
    https://www.googletagmanager.com \
    https://td.doubleclick.net; \
  font-src 'self' https://fonts.gstatic.com; \
  worker-src 'self'; \
  base-uri 'self'; \
  object-src 'none'; \
  form-action 'self'
```

Commit, push, redeploy. Header now satisfies every pixel and analytics script.

4. Disable navigation preload until a fetch handler uses it
   *edit sw\.js (or service-worker.js)*

```js
self.addEventListener('activate', event => {
  event.waitUntil(self.registration.navigationPreload.disable());
});
```

Rebuild, deploy.

5. If still using vite-plugin-pwa, comment it out until the service-worker assets compile cleanly. A fresh deploy without the plugin removes the navigation-preload warning entirely.

6. Verify
   `curl -I https://uplift-technologies.com | grep -i content-security-policy` returns the new header.
   Chrome DevTools Console shows zero CSP blocks, zero font decode errors, and no “Unexpected token” from sw\.js.

Implementation complete.

[1]: https://developer.mozilla.org/en-US/docs/Web/API/NavigationPreloadManager/disable?utm_source=chatgpt.com "NavigationPreloadManager: disable() method - Web APIs | MDN"
[2]: https://docs.netlify.com/security/content-security-policy/?utm_source=chatgpt.com "Content Security Policy | Netlify Docs"
[3]: https://developers.google.com/tag-platform/security/guides/csp?utm_source=chatgpt.com "Use Tag Manager with a Content Security Policy | Tag Platform"
